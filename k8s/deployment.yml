apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  labels:
    app: order-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/path: /actuator/prometheus
      prometheus.io/port: "9002"
    spec:
      containers:
        - name: order-service
          image: order-service
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 100m
              memory: 60Mi
            limits:
              cpu: 200m
              memory: 120Mi
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "sleep 5"]
          ports:
            - containerPort: 9002
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://polar-postgres/polardb_order
            - name: SPRING_CLOUD_CONFIG_URL
              value: http://config-service
            - name: SPRING_R2DBC_URL
              value: r2dbc:postgresql://polar-postgres:5432/polardb_order
            - name: SPRING_FLYWAY_URL
              value: jdbc:postgresql://polar-postgres:5432/polardb_order
            - name: POLAR_CATALOG_SERVICE_URI
              value: http://catalog-service:9001
            - name: SPRING_RABBITMQ_HOST
              value: polar-rabbitmq
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 9002
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 9002
            initialDelaySeconds: 5
            periodSeconds: 15